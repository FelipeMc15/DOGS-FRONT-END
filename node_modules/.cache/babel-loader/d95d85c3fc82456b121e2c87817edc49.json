{"ast":null,"code":"import { FETCH_DOGS, SEARCH_DOGS, SORT, NEXT, PREVIOUS, WEIGHT_FILTER, FILTER_TEMPERAMENTS, FILTER_API, FILTER_DB } from \"../actions\";\nconst initialState = {\n  dogs: [],\n  filteredDogs: []\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FETCH_DOGS:\n      return {\n        ...state,\n        filteredDogs: action.payload\n      };\n    case SEARCH_DOGS:\n      return {\n        ...state,\n        filteredDogs: {\n          data: action.payload\n        }\n      };\n    case NEXT:\n      return {\n        ...state,\n        page: state.page + action.payload\n      };\n    case PREVIOUS:\n      return {\n        ...state,\n        page: state.page - action.payload\n      };\n    case WEIGHT_FILTER:\n      if (action.payload === \"Heavier\") {\n        let data = state.filteredDogs.data.map(dog => {\n          if (dog.weight) {\n            let weightData = dog.weight.split(\" - \");\n            return {\n              ...dog,\n              weightSort: Number(weightData[0])\n            };\n          } else {\n            return {\n              ...dog,\n              weightSort: dog.weight_min\n            };\n          }\n        }).sort((a, b) => {\n          if (a.weightSort > b.weightSort) {\n            return -1;\n          }\n          if (a.weightSort < b.weightSort) {\n            return 1;\n          }\n          return 0;\n        });\n        return {\n          ...state,\n          filteredDogs: {\n            data: data\n          }\n        };\n      } else {\n        let data = state.filteredDogs.data.map(dog => {\n          if (dog.weight) {\n            let weightData = dog.weight.split(\" - \");\n            return {\n              ...dog,\n              weightSort: Number(weightData[0])\n            };\n          } else {\n            return {\n              ...dog,\n              weightSort: dog.weight_min\n            };\n          }\n        }).sort((a, b) => {\n          if (a.weightSort > b.weightSort) {\n            return 1;\n          }\n          if (a.weightSort < b.weightSort) {\n            return -1;\n          }\n          return 0;\n        });\n        return {\n          ...state,\n          filteredDogs: {\n            data: data\n          }\n        };\n      }\n    case SORT:\n      let orderedDogs = state.filteredDogs.data.reverse();\n      return {\n        ...state,\n        filteredDogs: {\n          data: orderedDogs\n        }\n      };\n    case FILTER_TEMPERAMENTS:\n      return {\n        ...state,\n        filteredDogs: {\n          data: action.payload\n        }\n      };\n    case FILTER_API:\n      let apiFilter = state.dogs.data.filter(dog => {\n        return typeof dog.id === \"number\";\n      });\n      return {\n        ...state,\n        filteredDogs: {\n          data: apiFilter\n        }\n      };\n    case FILTER_DB:\n      let dbFilter = state.dogs.data.filter(dog => {\n        return typeof dog.id == \"string\";\n      });\n      return {\n        ...state,\n        filteredDogs: {\n          data: dbFilter\n        }\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["FETCH_DOGS","SEARCH_DOGS","SORT","NEXT","PREVIOUS","WEIGHT_FILTER","FILTER_TEMPERAMENTS","FILTER_API","FILTER_DB","initialState","dogs","filteredDogs","reducer","state","action","type","payload","data","page","map","dog","weight","weightData","split","weightSort","Number","weight_min","sort","a","b","orderedDogs","reverse","apiFilter","filter","id","dbFilter"],"sources":["C:/Users/OFIMATICA-22/Desktop/PI-Dogs-main/client/src/store/reducer/index.js"],"sourcesContent":["import {\r\n  FETCH_DOGS,\r\n  SEARCH_DOGS,\r\n  SORT,\r\n  NEXT,\r\n  PREVIOUS,\r\n  WEIGHT_FILTER,\r\n  FILTER_TEMPERAMENTS,\r\n  FILTER_API,\r\n  FILTER_DB,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  dogs: [],\r\n  filteredDogs: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_DOGS:\r\n      return {\r\n        ...state,\r\n        filteredDogs: action.payload,\r\n      };\r\n    case SEARCH_DOGS:\r\n      return {\r\n        ...state,\r\n        filteredDogs: { data: action.payload },\r\n      };\r\n    case NEXT:\r\n      return {\r\n        ...state,\r\n        page: state.page + action.payload,\r\n      };\r\n    case PREVIOUS:\r\n      return {\r\n        ...state,\r\n        page: state.page - action.payload,\r\n      };\r\n    case WEIGHT_FILTER:\r\n      if (action.payload === \"Heavier\") {\r\n        let data = state.filteredDogs.data\r\n          .map((dog) => {\r\n            if (dog.weight) {\r\n              let weightData = dog.weight.split(\" - \");\r\n              return { ...dog, weightSort: Number(weightData[0]) };\r\n            } else {\r\n              return { ...dog, weightSort: dog.weight_min };\r\n            }\r\n          })\r\n          .sort((a, b) => {\r\n            if (a.weightSort > b.weightSort) {\r\n              return -1;\r\n            }\r\n            if (a.weightSort < b.weightSort) {\r\n              return 1;\r\n            }\r\n            return 0;\r\n          });\r\n        return {\r\n          ...state,\r\n          filteredDogs: { data: data },\r\n        };\r\n      } else {\r\n        let data = state.filteredDogs.data\r\n          .map((dog) => {\r\n            if (dog.weight) {\r\n              let weightData = dog.weight.split(\" - \");\r\n              return { ...dog, weightSort: Number(weightData[0]) };\r\n            } else {\r\n              return { ...dog, weightSort: dog.weight_min };\r\n            }\r\n          })\r\n          .sort((a, b) => {\r\n            if (a.weightSort > b.weightSort) {\r\n              return 1;\r\n            }\r\n            if (a.weightSort < b.weightSort) {\r\n              return -1;\r\n            }\r\n            return 0;\r\n          });\r\n        return {\r\n          ...state,\r\n          filteredDogs: { data: data },\r\n        };\r\n      }\r\n    case SORT:\r\n      let orderedDogs = state.filteredDogs.data.reverse();\r\n      return {\r\n        ...state,\r\n        filteredDogs: { data: orderedDogs },\r\n      };\r\n    case FILTER_TEMPERAMENTS:\r\n      return {\r\n        ...state,\r\n        filteredDogs: { data: action.payload },\r\n      };\r\n    case FILTER_API:\r\n      let apiFilter = state.dogs.data.filter((dog) => {\r\n        return typeof dog.id === \"number\";\r\n      });\r\n      return {\r\n        ...state,\r\n        filteredDogs: { data: apiFilter },\r\n      };\r\n    case FILTER_DB:\r\n      let dbFilter = state.dogs.data.filter((dog) => {\r\n        return typeof dog.id == \"string\";\r\n      });\r\n      return {\r\n        ...state,\r\n        filteredDogs: { data: dbFilter },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}