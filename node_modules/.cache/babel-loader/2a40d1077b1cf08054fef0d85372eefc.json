{"ast":null,"code":"import { FETCH_DOGS, SEARCH_DOGS, SORT, NEXT, PREVIOUS, WEIGHT_FILTER } from \"../actions\";\nimport { ASCENDENTE } from \"../../constantes/sort\";\nconst initialState = {\n  dogs: [],\n  filteredDogs: [],\n  page: 1\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FETCH_DOGS:\n      return {\n        ...state,\n        dogs: action.payload,\n        filteredDogs: action.payload\n      };\n    case SEARCH_DOGS:\n      return {\n        ...state,\n        filteredDogs: {\n          data: action.payload\n        }\n      };\n    case SORT:\n      let orderedDogs = [...state.filteredDogs.data];\n      orderedDogs = orderedDogs.sort((a, b) => {\n        if (a.name < b.name) {\n          return action.payload === ASCENDENTE ? -1 : 1;\n        }\n        if (a.name > b.name) {\n          return action.payload === ASCENDENTE ? 1 : -1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        filteredDogs: {\n          data: orderedDogs\n        }\n      };\n    case NEXT:\n      return {\n        ...state,\n        page: state.page + action.payload\n      };\n    case PREVIOUS:\n      return {\n        ...state,\n        page: state.page - action.payload\n      };\n    case WEIGHT_FILTER:\n      if (action.payload === \"Heavier\") {\n        state.filteredDogs && state.filteredDogs.map(dog => {\n          if (dog.weight) {\n            let weightData = dog.weight.split(\" - \");\n            console.log(weightData);\n          } else {\n            return dog.weight_max;\n          }\n        });\n      } else {\n        return state;\n      }\n      return;\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["FETCH_DOGS","SEARCH_DOGS","SORT","NEXT","PREVIOUS","WEIGHT_FILTER","ASCENDENTE","initialState","dogs","filteredDogs","page","reducer","state","action","type","payload","data","orderedDogs","sort","a","b","name","map","dog","weight","weightData","split","console","log","weight_max"],"sources":["C:/Users/OFIMATICA-22/Desktop/PI-Dogs-main/client/src/store/reducer/index.js"],"sourcesContent":["import {\r\n  FETCH_DOGS,\r\n  SEARCH_DOGS,\r\n  SORT,\r\n  NEXT,\r\n  PREVIOUS,\r\n  WEIGHT_FILTER,\r\n} from \"../actions\";\r\nimport { ASCENDENTE } from \"../../constantes/sort\";\r\n\r\nconst initialState = {\r\n  dogs: [],\r\n  filteredDogs: [],\r\n  page: 1,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_DOGS:\r\n      return {\r\n        ...state,\r\n        dogs: action.payload,\r\n        filteredDogs: action.payload,\r\n      };\r\n    case SEARCH_DOGS:\r\n      return {\r\n        ...state,\r\n        filteredDogs: { data: action.payload },\r\n      };\r\n    case SORT:\r\n      let orderedDogs = [...state.filteredDogs.data];\r\n\r\n      orderedDogs = orderedDogs.sort((a, b) => {\r\n        if (a.name < b.name) {\r\n          return action.payload === ASCENDENTE ? -1 : 1;\r\n        }\r\n        if (a.name > b.name) {\r\n          return action.payload === ASCENDENTE ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n      return {\r\n        ...state,\r\n        filteredDogs: { data: orderedDogs },\r\n      };\r\n    case NEXT:\r\n      return {\r\n        ...state,\r\n        page: state.page + action.payload,\r\n      };\r\n    case PREVIOUS:\r\n      return {\r\n        ...state,\r\n        page: state.page - action.payload,\r\n      };\r\n    case WEIGHT_FILTER:\r\n      if (action.payload === \"Heavier\") {\r\n        state.filteredDogs &&\r\n          state.filteredDogs.map((dog) => {\r\n            if (dog.weight) {\r\n              let weightData = dog.weight.split(\" - \");\r\n              console.log(weightData);\r\n            } else {\r\n              return dog.weight_max;\r\n            }\r\n          });\r\n      } else {\r\n        return state;\r\n      }\r\n      return;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SACEA,UAAU,EACVC,WAAW,EACXC,IAAI,EACJC,IAAI,EACJC,QAAQ,EACRC,aAAa,QACR,YAAY;AACnB,SAASC,UAAU,QAAQ,uBAAuB;AAElD,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE;EACRC,YAAY,EAAE,EAAE;EAChBC,IAAI,EAAE;AACR,CAAC;AAED,eAAe,SAASC,OAAO,GAA+B;EAAA,IAA9BC,KAAK,uEAAGL,YAAY;EAAA,IAAEM,MAAM;EAC1D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKd,UAAU;MACb,OAAO;QACL,GAAGY,KAAK;QACRJ,IAAI,EAAEK,MAAM,CAACE,OAAO;QACpBN,YAAY,EAAEI,MAAM,CAACE;MACvB,CAAC;IACH,KAAKd,WAAW;MACd,OAAO;QACL,GAAGW,KAAK;QACRH,YAAY,EAAE;UAAEO,IAAI,EAAEH,MAAM,CAACE;QAAQ;MACvC,CAAC;IACH,KAAKb,IAAI;MACP,IAAIe,WAAW,GAAG,CAAC,GAAGL,KAAK,CAACH,YAAY,CAACO,IAAI,CAAC;MAE9CC,WAAW,GAAGA,WAAW,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACvC,IAAID,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;UACnB,OAAOR,MAAM,CAACE,OAAO,KAAKT,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC;QAC/C;QACA,IAAIa,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;UACnB,OAAOR,MAAM,CAACE,OAAO,KAAKT,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;QAC/C;QACA,OAAO,CAAC;MACV,CAAC,CAAC;MACF,OAAO;QACL,GAAGM,KAAK;QACRH,YAAY,EAAE;UAAEO,IAAI,EAAEC;QAAY;MACpC,CAAC;IACH,KAAKd,IAAI;MACP,OAAO;QACL,GAAGS,KAAK;QACRF,IAAI,EAAEE,KAAK,CAACF,IAAI,GAAGG,MAAM,CAACE;MAC5B,CAAC;IACH,KAAKX,QAAQ;MACX,OAAO;QACL,GAAGQ,KAAK;QACRF,IAAI,EAAEE,KAAK,CAACF,IAAI,GAAGG,MAAM,CAACE;MAC5B,CAAC;IACH,KAAKV,aAAa;MAChB,IAAIQ,MAAM,CAACE,OAAO,KAAK,SAAS,EAAE;QAChCH,KAAK,CAACH,YAAY,IAChBG,KAAK,CAACH,YAAY,CAACa,GAAG,CAAEC,GAAG,IAAK;UAC9B,IAAIA,GAAG,CAACC,MAAM,EAAE;YACd,IAAIC,UAAU,GAAGF,GAAG,CAACC,MAAM,CAACE,KAAK,CAAC,KAAK,CAAC;YACxCC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;UACzB,CAAC,MAAM;YACL,OAAOF,GAAG,CAACM,UAAU;UACvB;QACF,CAAC,CAAC;MACN,CAAC,MAAM;QACL,OAAOjB,KAAK;MACd;MACA;IACF;MACE,OAAOA,KAAK;EAAC;AAEnB"},"metadata":{},"sourceType":"module"}